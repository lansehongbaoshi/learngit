<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
    <bean class="com.chsi.framework.config.spring.ConfigurablePropertyPlaceholder">
        <property name="propertyLocationSystemProperty" value="propertyPath" />
        <property name="defaultPropertyFileName" value="server.properties" />
        <property name="ignoreResourceNotFound" value="false" />
    </bean>
    <bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig">
        <property name="selectIntoAllow" value="false"></property>
        <property name="replaceAllow" value="false"></property>
        <property name="mergeAllow" value="false"></property>
        <property name="callAllow" value="false"></property>
        <property name="setAllow" value="false"></property>
        <property name="truncateAllow" value="false"></property>
        <property name="createTableAllow" value="false"></property>
        <property name="alterTableAllow" value="false"></property>
        <property name="dropTableAllow" value="false"></property>
        <property name="deleteWhereNoneCheck" value="true"></property>
        <property name="updateWhereNoneCheck" value="true"></property>
        <property name="conditionAndAlwayTrueAllow" value="false"></property>
        <property name="conditionAndAlwayFalseAllow" value="false"></property>
        <property name="mustParameterized" value="true"></property>
    </bean>
    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="logViolation" value="true"></property>
        <property name="throwException" value="false"></property>
        <property name="config" ref="wall-filter-config"></property>
    </bean>
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="mergeSql" value="true" />
    </bean>
    <bean id="parentDataSource" abstract="true">
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="30" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="6000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 1 FROM DUAL" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <property name="proxyFilters">
            <list>
                <ref bean="wall-filter" />
                <ref bean="stat-filter" />
            </list>
        </property>
        <property name="filters" value="slf4j" />
        <property name="connectionProperties" value="druid.stat.slowSqlMillis=100" />
    </bean>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" parent="parentDataSource">
        <property name="url" value="${sys.jdbc.datasourse.knowledge.url}" />
        <property name="username" value="${sys.jdbc.datasourse.knowledge.username}" />
        <property name="password" value="${sys.jdbc.datasourse.knowledge.password}" />
    </bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref local="dataSource" />
        </property>
        <property name="configLocation">
            <value>META-INF/conf/knowledge/hibernate-knowledge-cfg.xml</value>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.Oracle9iDialect</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
                <!--<prop key="hibernate.jdbc.fetch_size">15</prop> -->
                <prop key="hibernate.jdbc.batch_size">0</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.use_outer_join">false</prop>
            </props>
        </property>
    </bean>

    <bean id="daoInvocationHander" class="java.lang.String">
        <constructor-arg>
            <value>com.chsi.framework.hibernate.HibernateDAOInvocationHandler</value>
        </constructor-arg>
    </bean>

    <bean id="dbProvider" class="com.chsi.framework.service.HibernateDbProvider">
        <property name="daoInvocationHander">
            <ref local="daoInvocationHander" />
        </property>
    </bean>

    <!-- DAO beans -->
    
    <bean id="tagDataDAO" class="com.chsi.knowledge.dao.impl.TagDataDAOImpl">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean>
    
    <bean id="knowledgeDataDAO" class="com.chsi.knowledge.dao.impl.KnowledgeDataDAOImpl">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean>
    <bean id="discussDataDAO" class="com.chsi.knowledge.dao.impl.DiscussDataDAOImpl">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean> 
    
     <bean id="systemDataDAO" class="com.chsi.knowledge.dao.impl.SystemDataDAOImpl">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean> 
    
    <bean id="knowTagRelationDataDAO" class="com.chsi.knowledge.dao.impl.KnowTagRelationDataDAOImpl">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean> 
    
    <bean id="commonDAO" class="com.chsi.knowledge.dao.impl.CommonDAOImpl">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean>
    
    <bean id="systemOpenTimeDAO" class="com.chsi.knowledge.dao.impl.SystemOpenTimeDAOImpl">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean>
    
    <bean id="robotDAO" class="com.chsi.knowledge.dao.impl.RobotDAOImpl">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean>
    <bean id="weatherCodeDataDAO" class="com.chsi.knowledge.dao.impl.WeatherCodeDataDAOImpl">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean>
    <bean id="logOperDataDAO" class="com.chsi.knowledge.dao.impl.LogOperDataDAOImpl">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean>

</beans>
