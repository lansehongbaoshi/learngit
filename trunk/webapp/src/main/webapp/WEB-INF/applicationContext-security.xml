<?xml version="1.0" encoding="UTF-8"?>

<!--
  - Sample namespace-based configuration
  -
  - $Id: applicationContext-security.xml 3019 2008-05-01 17:51:48Z luke_t $
  -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd">
  <beans:bean id="sysPropertyConfigurer" class="com.chsi.framework.config.spring.ConfigurablePropertyPlaceholder">
    <beans:property name="propertyLocationSystemProperty" value="propertyPath" />
    <beans:property name="defaultPropertyFileName" value="server.properties" />
    <beans:property name="ignoreResourceNotFound" value="false" />
  </beans:bean>

 <beans:bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />
    
    <beans:bean id="transactionHandleAspect" class="com.chsi.framework.transaction.aspect.TransactionHandlerAspect" >
        <beans:property name="localTransaction" value="true"/>
    </beans:bean>
    
  <beans:bean id="locator" class="com.chsi.framework.service.BeanLocator"
    init-method="init">
    <beans:property name="beanFactoryLocatorKey"
      value="servicelayer-context-knowledge" />
    <beans:property name="factoryLocatorSelector"
      value="META-INF/conf/knowledge/beanRefContext.xml" />
    <beans:property name="dbProviderName" value="dbProvider" />
  </beans:bean> 
  <beans:bean id="baseDbService" abstract="true" init-method="create"
    destroy-method="remove">
    <beans:property name="locator">
      <beans:ref local="locator" />
    </beans:property>
  </beans:bean> 

                        
    <global-method-security secured-annotations="enabled">
        <!-- AspectJ pointcut expression that locates our "post" method and applies security that way
        <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
        -->
    </global-method-security>

    <http entry-point-ref="casProcessingFilterEntryPoint">
        <form-login />
        <http-basic />
        <anonymous />
        <remember-me />
        <!--登录监测页面-->
        <intercept-url pattern="/j_spring_cas_security_check" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        
        <intercept-url pattern="/htgl/admin/druid/**" access="ROLE_XLRZ_MODULE_ADMIN_MODIFY" />

        <intercept-url pattern="/htgl/system/**" access="ROLE_KNOWLEDGE_ADMIN" /> 
        <intercept-url pattern="/htgl/cti/**" access="ROLE_CTI_USER" />
        <intercept-url pattern="/htgl/**" access="ROLE_KNOWLEDGE" /> 
        <intercept-url pattern="/manage/**" access="ROLE_KNOWLEDGE_ADMIN" />
        
        <intercept-url pattern="/cti/**" access="ROLE_CTI_USER" />

        <!-- 公共资源-->
        <!-- <intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" /> -->
        <!-- Disable web URI authorization, as we're using <global-method-security> and have @Secured the services layer instead
        <intercept-url pattern="/listAccounts.html" access="IS_AUTHENTICATED_REMEMBERED" />
        <intercept-url pattern="/post.html" access="ROLE_TELLER" />
        -->
<!--
    Uncomment to enable X509 client authentication support
        <x509 /> 
-->

        <!-- All of this is unnecessary if auto-config="true"
        <form-login />
        <anonymous />
        <http-basic />
        <logout />
        <remember-me /> -->

        <!-- Uncomment to limit the number of sessions a user can have
        <concurrent-session-control max-sessions="1" exception-if-maximum-exceeded="true"/>
        -->     
    </http>
    
 <!--   <authentication-provider user-service-ref='userDetailsService'/> -->

    <beans:bean id="userDetailsService" class="com.chsi.account.client.springsecurity.UserDetailsServiceImpl" />
     
    <!-- Cas configure-->
    <beans:bean id="serviceProperties" class="org.springframework.security.ui.cas.ServiceProperties">
        <beans:property name="service" value="${sys.website.knowledge.protocol}://${sys.website.knowledge.servername}/j_spring_cas_security_check"/>
        <beans:property name="sendRenew" value="false"/>
    </beans:bean>    
    
    <authentication-manager alias="authenticationManager"/>

    <beans:bean id="casProcessingFilter" class="org.springframework.security.ui.cas.CasProcessingFilter">
        <custom-filter after="CAS_PROCESSING_FILTER"/>
        <beans:property name="invalidateSessionOnSuccessfulAuthentication" value="true"/><!--Protect against session fixation attacks -->
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationFailureUrl" value="/casfailed.jsp"/>
        <beans:property name="defaultTargetUrl" value="/"/>
    </beans:bean>

    <beans:bean id="casProcessingFilterEntryPoint"
        class="org.springframework.security.ui.cas.CasProcessingFilterEntryPoint">
        <beans:property name="loginUrl" value="${sys.website.account.protocol}://${sys.website.account.servername}/passport/login"/>
        <beans:property name="serviceProperties" ref="serviceProperties"/>
    </beans:bean>
    
    <beans:bean id="casAuthenticationProvider" class="org.springframework.security.providers.cas.CasAuthenticationProvider">
        <custom-authentication-provider />
        <beans:property name="userDetailsService" ref="userDetailsService"/>
        <beans:property name="serviceProperties" ref="serviceProperties" />
        <beans:property name="ticketValidator">
            <beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <beans:constructor-arg index="0" value="${sys.website.account.protocol}://${sys.website.account.servername}/passport" />
            </beans:bean>
        </beans:property>
        <beans:property name="key" value="cas_auth_provider_id_chsi20090209"/>
    </beans:bean>
    
       <!-- 退出登录 -->
   <beans:bean id="jedisProvider" class="com.chsi.jedis.ha.client.JedisHAProvider">
         <beans:constructor-arg index="0" value="expiredTicketCluster"/>
      </beans:bean>
      
     <beans:bean id="expiredTicketCache"  class="com.chsi.framework.springsecurity.cas.JedisBasedExpiredTicketCache">
         <beans:property name="jedisProvider" ref="jedisProvider"/>
     </beans:bean>

    <beans:bean id="casLogoutCallbackFilter"   class="com.chsi.framework.springsecurity.cas.filter.CasLogoutCallbackFilter">
        <custom-filter after="LOGOUT_FILTER "/>
        <beans:property name="filterProcessesUrl" value="/j_spring_cas_security_check" /><!--与CasProcessingfFlter监控的url一致-->
        <beans:property name="expiredTicketCache" ref="expiredTicketCache" />
    </beans:bean>    

    <beans:bean id="casLogoutFilter"   class="com.chsi.framework.springsecurity.cas.filter.CasLogoutFilter">
        <custom-filter position="LOGOUT_FILTER "/>
        <beans:property name="filterProcessesUrl" value="/logout/" />
        <beans:property name="logoutSuccessUrl" value="/" />
        <beans:property name="logoutHandlers">
            <beans:list>
                <beans:bean class="org.springframework.security.ui.logout.SecurityContextLogoutHandler">
                    <beans:property name="invalidateHttpSession" value="true" />
                </beans:bean>
            </beans:list>
        </beans:property>
        <beans:property name="serviceProperties" ref="serviceProperties" />
        <beans:property name="logoutUrl" value="${sys.website.account.protocol}://${sys.website.account.servername}/passport/logout" />
        <beans:property name="expiredTicketCache" ref="expiredTicketCache" />
    </beans:bean>    
</beans:beans>